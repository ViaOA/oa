// Generated by OABuilder
package com.tmgsc.hifivetest.model.oa.filter;

import com.tmgsc.hifivetest.model.oa.*;
import com.viaoa.annotation.*;
import com.viaoa.object.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import java.util.*;

@OAClass(addToCache=false, initialize=true, useDataSource=false, localOnly=true)
public class ProgramFilter extends OAObject {
    private static final long serialVersionUID = 1L;


    public HubFilter createActiveFilter(Hub<Program> hubMaster, Hub<Program> hub) {
        return createActiveFilter(hubMaster, hub, false);
    }
    public HubFilter createActiveFilter(final Hub<Program> hubMaster, Hub<Program> hub, boolean bAllHubs) {
        HubFilter filter = new HubFilter(hubMaster, hub) {
            @Override
            public boolean isUsed(Object object) {
                Program program = (Program) object;
                return isUsedForActiveFilter(program);
            }
        };
        filter.addDependentProperty(Program.PROPERTY_InactiveDate);
        filter.addDependentProperty(Program.PROPERTY_BeginDate);
 
        if (!bAllHubs) return filter;
        filter.setServerSideOnly(true); 
        // need to listen to all Program
        HubCacheAdder hubCacheAdder = new HubCacheAdder(hubMaster);
        return filter;
    }

    public boolean isUsedForActiveFilter(Program program) {
        OADate now = new OADate();
        OADate d = program.getInactiveDate();
        if (d != null && d.compareTo(now) <= 0) return false;
        
        d = program.getBeginDate();
        if (d == null) return false;
        return true;
    }
    
}
