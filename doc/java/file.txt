
http://java.dzone.com/articles/fast-java-file-serialization


        RandomAccessFile raf = new RandomAccessFile(fileName, "rw");
        FileOutputStream fos = new FileOutputStream(raf.getFD());
        //qqqqq this is much faster then directly using a File

qqqqqq

        InputStreamReader isr = new InputStreamReader(new FileInputStream(file), "UTF-8");
        BufferedReader reader = new BufferedReader(isr);
        InputStreamReader isr = new InputStreamReader(new FileInputStream(file), "UTF-8");
        BufferedReader reader = new BufferedReader(isr);
        
qqqqqqqq

        String fileName = Resource.getRootDir() + "/logs/request_";
        OADateTime dt = new OADateTime();
        String strDate = dt.toString("yyyyMMdd_HHmm");
        fileName += strDate;
        fileName += ".log";
        fileName = OAString.convertFileName(fileName);
        File file = new File(fileName);
        pwStatsLogger = new PrintWriter(file);
        ...
        pwStatsLogger.println(gsRequest.toLogString());

qqqqqqqqqq

        File file2 = new File(ResultsDirectory + "/requstStaticData.txt");
        OutputStreamWriter os = new OutputStreamWriter(new FileOutputStream(file2));
        PrintWriter writer = new PrintWriter(os);
        writer.println(line);


qqqqqqqqqqqqq

        File file = new File("/temp/te");
        String[] files = file.list(new FilenameFilter() {
            @Override
            public boolean accept(File dir, String name) {
                return (name.indexOf(".output.") >= 0);
            }
        });
        
        List<String> list = Arrays.asList(files);
        
        Collections.sort(list, new Comparator() {
            @Override
            public int compare(Object o1, Object o2) {
                String s1 = (String) o1;
                String s2 = (String) o2;
                
                int x1 = s1.lastIndexOf('.');
                if (x1 > 0 ) x1 = Integer.valueOf(s1.substring(x1+1));

                int x2 = s2.lastIndexOf('.');
                if (x2 > 0 ) x2 = Integer.valueOf(s2.substring(x2+1));
                
                if (x1 == x2) return 0;
                if (x1 < x2) return -1;
                return 1;
            }
        });

        
qqqqqqqq
        
        if (fileName != null) { 
            InputStreamReader isr = new InputStreamReader(new FileInputStream(fileName), "UTF-8");
            inputStream = new BufferedReader(isr);
        }
        
        if (inputStream != null) {
            try {
                setupHeader(inputStream.readLine());
                String line = inputStream.readLine();
                loadLine(line);  // load and display show first record
            }
            catch (Exception e) {
                e.printStackTrace();
                inputStream = null;
            }
        }
        
        
****** Read text file

    public void load() throws Exception {
        
        File file = new File("c:/temp/gsmr/test.log");
        
        InputStreamReader isr = new InputStreamReader(new FileInputStream(file), "UTF-8");
        BufferedReader reader = new BufferedReader(isr);
        
        for (int i=0; ;i++) {
            String line = reader.readLine();
            System.out.println(String.format("%d) %s", i, line));
            if (line == null) break;
        }
    }
    
    
    public static void main(String[] args) throws Exception {
        LoadLog ll = new LoadLog();
        ll.load();
    }
        
        